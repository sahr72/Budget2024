// <auto-generated />
using System;
using Budget2024.Infrastructure.ModelEntity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Budget2024.Infrastructure.ModelEntity
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250103205412_decription1")]
    partial class decription1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Budget2024.Infrastructure.Data.Article", b =>
                {
                    b.Property<int>("ArticleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ArticleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArticleId"));

                    b.Property<int>("ChapitreId")
                        .HasColumnType("int")
                        .HasColumnName("ChapitreID");

                    b.Property<string>("CodeArt")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Article");

                    b.Property<decimal>("EngIni")
                        .HasColumnType("money");

                    b.Property<decimal>("Rattachement")
                        .HasColumnType("money");

                    b.Property<decimal>("Reste")
                        .HasColumnType("money");

                    b.HasKey("ArticleId");

                    b.HasIndex("ChapitreId");

                    b.ToTable("Articles", "budget");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.Bonification", b =>
                {
                    b.Property<int>("BonificationId")
                        .HasColumnType("int")
                        .HasColumnName("BonificationID");

                    b.Property<decimal>("Bon")
                        .HasColumnType("money")
                        .HasColumnName("BON");

                    b.Property<int>("Indice")
                        .HasColumnType("int")
                        .HasColumnName("INDICE");

                    b.HasKey("BonificationId");

                    b.ToTable("Bonifications", "grille");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.Budget", b =>
                {
                    b.Property<int>("BudgetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BudgetID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BudgetId"));

                    b.Property<string>("Budget1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Budget");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("CODE");

                    b.Property<string>("Obs")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("BudgetId");

                    b.ToTable("Budgets", "budget");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.Chapitre", b =>
                {
                    b.Property<int>("ChapitreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ChapitreID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChapitreId"));

                    b.Property<int>("BudgetId")
                        .HasColumnType("int")
                        .HasColumnName("BudgetID");

                    b.Property<string>("CodeChap")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Chapitre");

                    b.HasKey("ChapitreId");

                    b.HasIndex("BudgetId");

                    b.ToTable("Chapitres", "budget");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.Corps", b =>
                {
                    b.Property<int>("CleCorps")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CleCorps"));

                    b.Property<string>("CodeCorps")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Corps");

                    b.HasKey("CleCorps");

                    b.ToTable("Corps", "statutPartic");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.Corps1", b =>
                {
                    b.Property<int>("Corps1Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Corps1ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Corps1Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("FiliereId")
                        .HasColumnType("int")
                        .HasColumnName("FiliereID");

                    b.HasKey("Corps1Id");

                    b.HasIndex("FiliereId");

                    b.ToTable("Corps1s", "statutPartic");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.CorpsPrincipal", b =>
                {
                    b.Property<int>("CorpsPrincipalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CorpsPrincipalID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CorpsPrincipalId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CorpsPrincipalId");

                    b.ToTable("CorpsPrincipals", "statutPartic");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.Exercice", b =>
                {
                    b.Property<string>("Exe")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("EXE");

                    b.ToTable("Exercice", "Reference");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.Filiere", b =>
                {
                    b.Property<int>("FiliereId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FiliereID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FiliereId"));

                    b.Property<int>("CorpsPincipalId")
                        .HasColumnType("int")
                        .HasColumnName("CorpsPincipalID");

                    b.Property<string>("Filiere1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Filiere");

                    b.HasKey("FiliereId");

                    b.HasIndex("CorpsPincipalId");

                    b.ToTable("Filieres", "statutPartic");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.FoncSup", b =>
                {
                    b.Property<int>("FoncSupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FoncSupID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FoncSupId"));

                    b.Property<string>("CodeGrad")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("FoncSup1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FoncSup");

                    b.Property<short?>("Ordre")
                        .HasColumnType("smallint");

                    b.HasKey("FoncSupId");

                    b.HasIndex("CodeGrad");

                    b.ToTable("FoncSups", "statutPartic");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.Grade", b =>
                {
                    b.Property<int>("GradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GradeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GradeId"));

                    b.Property<string>("Cat")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Cat311207")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CodeGrad")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int>("Corps1Id")
                        .HasColumnType("int")
                        .HasColumnName("Corps1ID");

                    b.Property<string>("Grade1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Grade");

                    b.Property<int>("IndiceMin")
                        .HasColumnType("int");

                    b.Property<string>("IndiceMin311207")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("Ordre")
                        .HasColumnType("smallint");

                    b.Property<string>("Sec")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sec311207")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GradeId");

                    b.HasIndex("CodeGrad");

                    b.HasIndex("Corps1Id");

                    b.ToTable("Grades", "statutPartic");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.GrilleIep", b =>
                {
                    b.Property<string>("Codegrad")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("CODEGRAD");

                    b.Property<string>("Echelon")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("ECHELON");

                    b.Property<decimal>("Iep")
                        .HasColumnType("money")
                        .HasColumnName("IEP");

                    b.Property<decimal?>("Iepp")
                        .HasColumnType("money")
                        .HasColumnName("IEPP");

                    b.Property<int?>("Note")
                        .HasColumnType("int")
                        .HasColumnName("NOTE");

                    b.HasKey("Codegrad", "Echelon");

                    b.ToTable("GrilleIEPs", "grille");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.GrilleIep1", b =>
                {
                    b.Property<string>("Codegrad")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("CODEGRAD");

                    b.Property<string>("Echelon")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("ECHELON");

                    b.Property<decimal?>("Iep")
                        .HasColumnType("money")
                        .HasColumnName("IEP");

                    b.Property<decimal?>("Iepp")
                        .HasColumnType("money")
                        .HasColumnName("IEPP");

                    b.Property<int?>("Note")
                        .HasColumnType("int")
                        .HasColumnName("NOTE");

                    b.HasKey("Codegrad", "Echelon");

                    b.ToTable("GrilleIEP1s", "grille");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.GrilleSb", b =>
                {
                    b.Property<string>("Codegrad")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("CODEGRAD");

                    b.Property<string>("Cat")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("CAT");

                    b.Property<decimal>("Icr")
                        .HasColumnType("money")
                        .HasColumnName("ICR");

                    b.Property<int>("Indice")
                        .HasColumnType("int")
                        .HasColumnName("INDICE");

                    b.Property<decimal>("Sb")
                        .HasColumnType("money")
                        .HasColumnName("SB");

                    b.Property<string>("Sec")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("SEC");

                    b.HasKey("Codegrad");

                    b.ToTable("GrilleSBs", "grille");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.Indemnite", b =>
                {
                    b.Property<int>("IndemniteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IndemniteID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IndemniteId"));

                    b.Property<int>("ArticleId")
                        .HasColumnType("int")
                        .HasColumnName("ArticleID");

                    b.Property<string>("Beneficiaire")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Cal")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("CAL");

                    b.Property<string>("Coim")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("COIM");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("IND");

                    b.Property<decimal>("Mt")
                        .HasColumnType("money");

                    b.Property<short>("Mvt")
                        .HasColumnType("smallint")
                        .HasColumnName("MVT");

                    b.Property<int?>("Ordre")
                        .HasColumnType("int")
                        .HasColumnName("ORDRE");

                    b.Property<string>("Sig")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("SIG");

                    b.Property<bool>("SoumisAbs")
                        .HasColumnType("bit");

                    b.Property<decimal>("Taux")
                        .HasColumnType("money")
                        .HasColumnName("TAUX");

                    b.Property<string>("Typ")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("TYP");

                    b.HasKey("IndemniteId");

                    b.HasIndex("ArticleId");

                    b.ToTable("Indemnites", "budget");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.LigneCorpsInd", b =>
                {
                    b.Property<int>("IndemniteId")
                        .HasColumnType("int")
                        .HasColumnName("IndemniteID");

                    b.Property<int>("Corps1Id")
                        .HasColumnType("int")
                        .HasColumnName("Corps1ID");

                    b.Property<string>("NatJurRelTrav")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("IndemniteId", "Corps1Id", "NatJurRelTrav");

                    b.HasIndex("Corps1Id");

                    b.ToTable("LigneCorpsInd", "parametre");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.LigneIndFil", b =>
                {
                    b.Property<int>("IndemniteId")
                        .HasColumnType("int")
                        .HasColumnName("IndemniteID");

                    b.Property<int>("FiliereId")
                        .HasColumnType("int")
                        .HasColumnName("FiliereID");

                    b.Property<string>("NatJurRelTrav")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("IndemniteId", "FiliereId", "NatJurRelTrav");

                    b.HasIndex("FiliereId");

                    b.ToTable("LigneIndFil", "parametre");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.LigneIndGrade", b =>
                {
                    b.Property<int>("IndemniteId")
                        .HasColumnType("int")
                        .HasColumnName("IndemniteID");

                    b.Property<int>("GradeId")
                        .HasColumnType("int")
                        .HasColumnName("GradeID");

                    b.Property<string>("NatJurRelTrav")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("IndemniteId", "GradeId", "NatJurRelTrav");

                    b.ToTable("LigneIndGrade", "parametre");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.LigneIndSb", b =>
                {
                    b.Property<int>("IndemniteId")
                        .HasColumnType("int")
                        .HasColumnName("IndemniteID");

                    b.Property<string>("CodeGrad")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("NatJurRelTrav")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("IndemniteId", "CodeGrad", "NatJurRelTrav");

                    b.ToTable("LigneIndSB", "parametre");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.LigneMatChap", b =>
                {
                    b.Property<int>("TypeMatriceId")
                        .HasColumnType("int")
                        .HasColumnName("TypeMatriceID");

                    b.Property<int>("ChapitreId")
                        .HasColumnType("int")
                        .HasColumnName("ChapitreID");

                    b.Property<decimal?>("MtEngag")
                        .HasColumnType("money");

                    b.Property<int?>("OrdChap")
                        .HasColumnType("int");

                    b.Property<string>("TypeChap")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("TypeMatriceId", "ChapitreId");

                    b.HasIndex("ChapitreId");

                    b.ToTable("LigneMatChap", "parametre");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.LigneMatCorpsInd", b =>
                {
                    b.Property<int>("CleMat")
                        .HasColumnType("int");

                    b.Property<int>("CleCorps")
                        .HasColumnType("int");

                    b.Property<int>("CleInd")
                        .HasColumnType("int");

                    b.HasKey("CleMat", "CleCorps", "CleInd");

                    b.HasIndex("CleInd");

                    b.ToTable("LigneMatCorpsInd", "parametre");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.LigneMatCorpsRet", b =>
                {
                    b.Property<int?>("CleCorps")
                        .HasColumnType("int");

                    b.Property<int?>("CleMat")
                        .HasColumnType("int");

                    b.Property<int?>("CleRet")
                        .HasColumnType("int");

                    b.ToTable("LigneMatCorpsRet", "parametre");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.LigneMatInd", b =>
                {
                    b.Property<int>("IndemniteId")
                        .HasColumnType("int")
                        .HasColumnName("IndemniteID");

                    b.Property<int>("TypeMatriceId")
                        .HasColumnType("int")
                        .HasColumnName("TypeMatriceID");

                    b.Property<string>("Beneficiaire")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Cal")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("CAL");

                    b.Property<int?>("CleArt")
                        .HasColumnType("int");

                    b.Property<float?>("CleBudget")
                        .HasColumnType("real");

                    b.Property<int?>("CleChap")
                        .HasColumnType("int");

                    b.Property<string>("CodArt")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("CodeChap")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Coim")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("COIM");

                    b.Property<string>("Ind")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Mat")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Mt")
                        .HasColumnType("money");

                    b.Property<short?>("Mvt")
                        .HasColumnType("smallint");

                    b.Property<int?>("OrdInd")
                        .HasColumnType("int");

                    b.Property<int?>("Page")
                        .HasColumnType("int");

                    b.Property<bool>("SoumisAbs")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Taux")
                        .HasColumnType("money");

                    b.HasKey("IndemniteId", "TypeMatriceId");

                    b.HasIndex("TypeMatriceId");

                    b.ToTable("LigneMatInd", "parametre");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.LigneMatIndPeriode", b =>
                {
                    b.Property<int>("IndemniteId")
                        .HasColumnType("int")
                        .HasColumnName("IndemniteID");

                    b.Property<int>("TypeMatriceId")
                        .HasColumnType("int")
                        .HasColumnName("TypeMatriceID");

                    b.Property<int>("PeriodeId")
                        .HasColumnType("int")
                        .HasColumnName("PeriodeID");

                    b.Property<int?>("OrdInd")
                        .HasColumnType("int");

                    b.HasKey("IndemniteId", "TypeMatriceId", "PeriodeId");

                    b.HasIndex("PeriodeId");

                    b.HasIndex("TypeMatriceId");

                    b.ToTable("LigneMatIndPeriode", "parametre");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.Moi", b =>
                {
                    b.Property<string>("CodeMois")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Mois")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.ToTable("Mois", "Reference");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.Periode", b =>
                {
                    b.Property<string>("CodeMois")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Design")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Exe")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.ToTable("Periode", "Reference");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.PeriodeEngMat", b =>
                {
                    b.Property<int>("PeriodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PeriodeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PeriodeId"));

                    b.Property<string>("Aaaa")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("AAAA");

                    b.Property<DateTime?>("Au")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Du")
                        .HasColumnType("datetime");

                    b.Property<int?>("NbrMois")
                        .HasColumnType("int");

                    b.Property<string>("Obs")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PeriodeId");

                    b.ToTable("PeriodeEngMat", "Reference");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.PosteSup", b =>
                {
                    b.Property<int>("PosteSupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PosteSupID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PosteSupId"));

                    b.Property<int>("BonificationId")
                        .HasColumnType("int")
                        .HasColumnName("BonificationID");

                    b.Property<int>("FiliereId")
                        .HasColumnType("int")
                        .HasColumnName("FiliereID");

                    b.Property<short?>("Ordre")
                        .HasColumnType("smallint");

                    b.Property<string>("PosteSup1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("PosteSup");

                    b.Property<string>("TypePoste")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("PosteSupId");

                    b.HasIndex("FiliereId");

                    b.ToTable("PosteSups", "statutPartic");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.TypeMatrix", b =>
                {
                    b.Property<int>("TypeMatriceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TypeMatriceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeMatriceId"));

                    b.Property<int>("Beneficiaire")
                        .HasColumnType("int");

                    b.Property<string>("Budget")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CalcAbsBrutNetTitre")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("CodChapAf")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)")
                        .HasColumnName("CodChapAF");

                    b.Property<string>("CodChapInd")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("CodChapSal")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("CodeMat")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("CotImp")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("ExeAct")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("GroupePayePar")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Matrice")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<float?>("NbJourHeureMois")
                        .HasColumnType("real");

                    b.Property<short?>("OrdreAct")
                        .HasColumnType("smallint");

                    b.Property<bool>("SoumisTitrePer")
                        .HasColumnType("bit");

                    b.HasKey("TypeMatriceId");

                    b.ToTable("TypeMatrices", "engagement");
                });

            modelBuilder.Entity("LigneGradeMat", b =>
                {
                    b.Property<int>("GradeId")
                        .HasColumnType("int")
                        .HasColumnName("GradeID");

                    b.Property<int>("TypeMatriceId")
                        .HasColumnType("int")
                        .HasColumnName("TypeMatriceID");

                    b.HasKey("GradeId", "TypeMatriceId");

                    b.HasIndex("TypeMatriceId");

                    b.ToTable("LigneGradeMat", "parametre");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.Article", b =>
                {
                    b.HasOne("Budget2024.Infrastructure.Data.Chapitre", "Chapitre")
                        .WithMany("Articles")
                        .HasForeignKey("ChapitreId")
                        .IsRequired()
                        .HasConstraintName("FK_Articles_Chapitres");

                    b.Navigation("Chapitre");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.Chapitre", b =>
                {
                    b.HasOne("Budget2024.Infrastructure.Data.Budget", "Budget")
                        .WithMany("Chapitres")
                        .HasForeignKey("BudgetId")
                        .IsRequired()
                        .HasConstraintName("FK_Chapitres_Budgets");

                    b.Navigation("Budget");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.Corps1", b =>
                {
                    b.HasOne("Budget2024.Infrastructure.Data.Filiere", "Filiere")
                        .WithMany("Corps1s")
                        .HasForeignKey("FiliereId")
                        .IsRequired()
                        .HasConstraintName("FK_Corps1s_Filieres");

                    b.Navigation("Filiere");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.Filiere", b =>
                {
                    b.HasOne("Budget2024.Infrastructure.Data.CorpsPrincipal", "CorpsPincipal")
                        .WithMany("Filieres")
                        .HasForeignKey("CorpsPincipalId")
                        .IsRequired()
                        .HasConstraintName("FK_Filieres_CorpsPrincipals");

                    b.Navigation("CorpsPincipal");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.FoncSup", b =>
                {
                    b.HasOne("Budget2024.Infrastructure.Data.GrilleSb", "CodeGradNavigation")
                        .WithMany("FoncSups")
                        .HasForeignKey("CodeGrad")
                        .IsRequired()
                        .HasConstraintName("FK_FoncSups_GrilleSBs");

                    b.Navigation("CodeGradNavigation");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.Grade", b =>
                {
                    b.HasOne("Budget2024.Infrastructure.Data.GrilleSb", "CodeGradNavigation")
                        .WithMany("Grades")
                        .HasForeignKey("CodeGrad")
                        .IsRequired()
                        .HasConstraintName("FK_Grades_GrilleSBs");

                    b.HasOne("Budget2024.Infrastructure.Data.Corps1", "Corps1")
                        .WithMany("Grades")
                        .HasForeignKey("Corps1Id")
                        .IsRequired()
                        .HasConstraintName("FK_Grades_Corps1s");

                    b.Navigation("CodeGradNavigation");

                    b.Navigation("Corps1");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.GrilleIep", b =>
                {
                    b.HasOne("Budget2024.Infrastructure.Data.GrilleSb", "CodegradNavigation")
                        .WithMany("GrilleIeps")
                        .HasForeignKey("Codegrad")
                        .IsRequired()
                        .HasConstraintName("FK_GrilleIEPs_GrilleSBs");

                    b.Navigation("CodegradNavigation");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.Indemnite", b =>
                {
                    b.HasOne("Budget2024.Infrastructure.Data.Article", "Article")
                        .WithMany("Indemnites")
                        .HasForeignKey("ArticleId")
                        .IsRequired()
                        .HasConstraintName("FK_Indemnites_Articles");

                    b.Navigation("Article");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.LigneCorpsInd", b =>
                {
                    b.HasOne("Budget2024.Infrastructure.Data.Corps1", "Corps1")
                        .WithMany("LigneCorpsInds")
                        .HasForeignKey("Corps1Id")
                        .IsRequired()
                        .HasConstraintName("FK_LigneCorpsInd_Corps1s");

                    b.HasOne("Budget2024.Infrastructure.Data.Indemnite", "Indemnite")
                        .WithMany("LigneCorpsInds")
                        .HasForeignKey("IndemniteId")
                        .IsRequired()
                        .HasConstraintName("FK_LigneCorpsInd_Indemnites");

                    b.Navigation("Corps1");

                    b.Navigation("Indemnite");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.LigneIndFil", b =>
                {
                    b.HasOne("Budget2024.Infrastructure.Data.Filiere", "Filiere")
                        .WithMany("LigneIndFils")
                        .HasForeignKey("FiliereId")
                        .IsRequired()
                        .HasConstraintName("FK_LigneIndFil_Filieres");

                    b.HasOne("Budget2024.Infrastructure.Data.Indemnite", "Indemnite")
                        .WithMany("LigneIndFils")
                        .HasForeignKey("IndemniteId")
                        .IsRequired()
                        .HasConstraintName("FK_LigneIndFil_Indemnites");

                    b.Navigation("Filiere");

                    b.Navigation("Indemnite");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.LigneIndGrade", b =>
                {
                    b.HasOne("Budget2024.Infrastructure.Data.Indemnite", "Indemnite")
                        .WithMany("LigneIndGrades")
                        .HasForeignKey("IndemniteId")
                        .IsRequired()
                        .HasConstraintName("FK_LigneIndGrade_Indemnites");

                    b.Navigation("Indemnite");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.LigneIndSb", b =>
                {
                    b.HasOne("Budget2024.Infrastructure.Data.Indemnite", "Indemnite")
                        .WithMany("LigneIndSbs")
                        .HasForeignKey("IndemniteId")
                        .IsRequired()
                        .HasConstraintName("FK_LigneIndSB_Indemnites");

                    b.Navigation("Indemnite");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.LigneMatChap", b =>
                {
                    b.HasOne("Budget2024.Infrastructure.Data.Chapitre", "Chapitre")
                        .WithMany("LigneMatChaps")
                        .HasForeignKey("ChapitreId")
                        .IsRequired()
                        .HasConstraintName("FK_LigneMatChap_Chapitres");

                    b.HasOne("Budget2024.Infrastructure.Data.TypeMatrix", "TypeMatrice")
                        .WithMany("LigneMatChaps")
                        .HasForeignKey("TypeMatriceId")
                        .IsRequired()
                        .HasConstraintName("FK_LigneMatChap_TypeMatrices");

                    b.Navigation("Chapitre");

                    b.Navigation("TypeMatrice");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.LigneMatCorpsInd", b =>
                {
                    b.HasOne("Budget2024.Infrastructure.Data.Indemnite", "CleIndNavigation")
                        .WithMany("LigneMatCorpsInds")
                        .HasForeignKey("CleInd")
                        .IsRequired()
                        .HasConstraintName("FK_LigneMatCorpsInd_Indemnites");

                    b.HasOne("Budget2024.Infrastructure.Data.TypeMatrix", "CleMatNavigation")
                        .WithMany("LigneMatCorpsInds")
                        .HasForeignKey("CleMat")
                        .IsRequired()
                        .HasConstraintName("FK_LigneMatCorpsInd_TypeMatrices");

                    b.Navigation("CleIndNavigation");

                    b.Navigation("CleMatNavigation");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.LigneMatInd", b =>
                {
                    b.HasOne("Budget2024.Infrastructure.Data.Indemnite", "Indemnite")
                        .WithMany("LigneMatInds")
                        .HasForeignKey("IndemniteId")
                        .IsRequired()
                        .HasConstraintName("FK_LigneMatInd_Indemnites");

                    b.HasOne("Budget2024.Infrastructure.Data.TypeMatrix", "TypeMatrice")
                        .WithMany("LigneMatInds")
                        .HasForeignKey("TypeMatriceId")
                        .IsRequired()
                        .HasConstraintName("FK_LigneMatInd_TypeMatrices");

                    b.Navigation("Indemnite");

                    b.Navigation("TypeMatrice");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.LigneMatIndPeriode", b =>
                {
                    b.HasOne("Budget2024.Infrastructure.Data.Indemnite", "Indemnite")
                        .WithMany("LigneMatIndPeriodes")
                        .HasForeignKey("IndemniteId")
                        .IsRequired()
                        .HasConstraintName("FK_LigneMatIndPeriode_Indemnites");

                    b.HasOne("Budget2024.Infrastructure.Data.PeriodeEngMat", "Periode")
                        .WithMany("LigneMatIndPeriodes")
                        .HasForeignKey("PeriodeId")
                        .IsRequired()
                        .HasConstraintName("FK_LigneMatIndPeriode_PeriodeEngMat");

                    b.HasOne("Budget2024.Infrastructure.Data.TypeMatrix", "TypeMatrice")
                        .WithMany("LigneMatIndPeriodes")
                        .HasForeignKey("TypeMatriceId")
                        .IsRequired()
                        .HasConstraintName("FK_LigneMatIndPeriode_TypeMatrices");

                    b.Navigation("Indemnite");

                    b.Navigation("Periode");

                    b.Navigation("TypeMatrice");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.PosteSup", b =>
                {
                    b.HasOne("Budget2024.Infrastructure.Data.Filiere", "Filiere")
                        .WithMany("PosteSups")
                        .HasForeignKey("FiliereId")
                        .IsRequired()
                        .HasConstraintName("FK_PosteSups_Filieres");

                    b.Navigation("Filiere");
                });

            modelBuilder.Entity("LigneGradeMat", b =>
                {
                    b.HasOne("Budget2024.Infrastructure.Data.Grade", null)
                        .WithMany()
                        .HasForeignKey("GradeId")
                        .IsRequired()
                        .HasConstraintName("FK_LigneGradeMat_Grades");

                    b.HasOne("Budget2024.Infrastructure.Data.TypeMatrix", null)
                        .WithMany()
                        .HasForeignKey("TypeMatriceId")
                        .IsRequired()
                        .HasConstraintName("FK_LigneGradeMat_TypeMatrices");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.Article", b =>
                {
                    b.Navigation("Indemnites");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.Budget", b =>
                {
                    b.Navigation("Chapitres");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.Chapitre", b =>
                {
                    b.Navigation("Articles");

                    b.Navigation("LigneMatChaps");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.Corps1", b =>
                {
                    b.Navigation("Grades");

                    b.Navigation("LigneCorpsInds");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.CorpsPrincipal", b =>
                {
                    b.Navigation("Filieres");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.Filiere", b =>
                {
                    b.Navigation("Corps1s");

                    b.Navigation("LigneIndFils");

                    b.Navigation("PosteSups");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.GrilleSb", b =>
                {
                    b.Navigation("FoncSups");

                    b.Navigation("Grades");

                    b.Navigation("GrilleIeps");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.Indemnite", b =>
                {
                    b.Navigation("LigneCorpsInds");

                    b.Navigation("LigneIndFils");

                    b.Navigation("LigneIndGrades");

                    b.Navigation("LigneIndSbs");

                    b.Navigation("LigneMatCorpsInds");

                    b.Navigation("LigneMatIndPeriodes");

                    b.Navigation("LigneMatInds");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.PeriodeEngMat", b =>
                {
                    b.Navigation("LigneMatIndPeriodes");
                });

            modelBuilder.Entity("Budget2024.Infrastructure.Data.TypeMatrix", b =>
                {
                    b.Navigation("LigneMatChaps");

                    b.Navigation("LigneMatCorpsInds");

                    b.Navigation("LigneMatIndPeriodes");

                    b.Navigation("LigneMatInds");
                });
#pragma warning restore 612, 618
        }
    }
}
