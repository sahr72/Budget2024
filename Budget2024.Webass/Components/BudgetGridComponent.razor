@using Budget2024.Application.DTOs
@using Budget2024.Application.DTOs.Budget


<MudTable Items="@Budgets" Hover="true" Filter="FilterFunc" @bind-SelectedItem="SelectedBudget" Bordered="true" Striped="true" RowClassFunc="GetRowClass">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Budget List</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="_searchString" Placeholder="Rechercher..." Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" Immediate="true" />
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Budget ID</MudTh>
        <MudTh>Code</MudTh>
        <MudTh>Description</MudTh>
        <MudTh>Observation</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Budget ID">@context.BudgetId</MudTd>
        <MudTd DataLabel="Code">@context.Code</MudTd>
        <MudTd DataLabel="Description">@context.Budget1</MudTd>
        <MudTd DataLabel="Observation">@context.Obs</MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>

@code {
    [Parameter]
    public List<BudgetDTO> Budgets { get; set; }// = new();

    [Parameter]
    public EventCallback<BudgetDTO> OnRowSelected { get; set; }

    private BudgetDTO? SelectedBudget { get; set; }
    private string _searchString = "";

    private bool FilterFunc(BudgetDTO budget)
    {
        if (string.IsNullOrWhiteSpace(_searchString))
            return true;
        return budget.Code?.Contains(_searchString, StringComparison.OrdinalIgnoreCase) == true ||
               budget.Obs?.Contains(_searchString, StringComparison.OrdinalIgnoreCase) == true ||
               budget.BudgetId.ToString().Contains(_searchString);
    }

    protected override async Task OnParametersSetAsync()
    {
        // Notify parent when a row is selected
        if (SelectedBudget != null)
        {
            await OnRowSelected.InvokeAsync(SelectedBudget);
        }
    }
    private string GetRowClass(BudgetDTO budget, int rowIndex)
    {
        // Highlight selected row with a custom CSS class
        return budget == SelectedBudget ? "selected-row" : string.Empty;
    }

}
